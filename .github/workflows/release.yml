name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

env:
  DOCKER_REPO: ww24/pubsub-gateway
  IMAGE_NAME: pubsub-gateway

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.33

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-go@v2
        with:
          go-version: "~1.15.6"
      - name: go generate
        run: make generate
      - name: Check uncommitted changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
              echo "uncommitted changes"
              git status
              exit 1
          fi
      - name: Test
        run: go test -v -race ./...

  docker_build_test:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Shellcheck
        env:
          SHELLCHECK_OPTS: -e SC2187
        run: find . -name "*.sh" | xargs shellcheck
      - name: Lint
        run: |
          docker run -v $(pwd):/working --rm hadolint/hadolint \
          hadolint /working/Dockerfile \
          --ignore DL3018
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          outputs: type=docker
          tags: "${{ env.IMAGE_NAME }}:${{ github.sha }}"
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.IMAGE_NAME }}:${{ github.sha }}"
          exit-code: "1"
          severity: CRITICAL,HIGH
          format: template
          template: "@/contrib/sarif.tpl"
          output: trivy-results.sarif
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: trivy-results.sarif

  docker_push:
    needs: [lint, test, docker_build_test]
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Set image tag
        run: |
          tag=$(echo "${GITHUB_REF}" | sed "s/^refs\/tags\/v//")
          if [ -z "$tag" ]; then
            exit 1
          fi
          echo "IMAGE_TAG=$tag" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKER_REPO }}:${{ env.IMAGE_TAG }}
